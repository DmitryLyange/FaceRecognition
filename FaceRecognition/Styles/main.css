body {
  margin: 0;
  display: flex;
  flex-direction: column;
}

.toolbar {
  width: 100%;
  height: 3rem;
  display: flex;
  flex-direction: row;
  align-items: center;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
}

.main-body {
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: baseline;
  overflow-x: auto;
  height: 100%;
}

.container-group {
  transform: translate(80px, 20px);
}

.button {
  height: 2rem;
  min-width: 5rem;
  padding: 0.5rem;
  background-color: #679ed2;
  margin: 0.5rem;
  box-shadow: none;
  border: none;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  color: white;
  border-radius: 1rem;
  outline: none;
}

.button:hover {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  cursor: pointer;
}

/*
--- body card styles
*/

.card-container {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  max-width: 30%;
  margin: 1rem;
  border-radius: 0.3rem;
}

.card-body-container {
  padding: 0 0.5rem;
}

.card-input {
  border: none;
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
  margin-left: 1rem;
}

.card-input_title {
  color: rgba(0, 0, 0, 0.4);
}

.card-header {
  font-size: 1.5rem;
  border-top-left-radius: 0.3rem;
  border-top-right-radius: 0.3rem;
}
/*
--- table styles
*/
.empty-grid-cell {
  grid-area: empty;
}
.trueCondition-grid-cell {
  grid-area: truecondition;
}
.inSystem-grid-cell {
  grid-area: insystem;
}
.notInSystem-grid-cell {
  grid-area: notinsystem;
}
.hasAccess-grid-cell {
  grid-area: hasaccess;
}
.noAccess-grid-cell {
  grid-area: noaccess;
}
.hasAccessSelf-grid-cell {
  grid-area: hasaccessself;
}
.hasAccessNotSelf-grid-cell {
  grid-area: hasaccessnotself;
}
.noAccessSelf-grid-cell {
  grid-area: noaccessself;
}
.noAccessNotSelf-grid-cell {
  grid-area: noaccessnotself;
}
.predictedCondition-grid-cell {
  grid-area: predcond;
}
.inSystemHoriz-grid-cell {
  grid-area: inSystemHoriz;
}
.notInSystemHoriz-grid-cell {
  grid-area: notinsystemHoriz;
}
.hasAccessHoriz-grid-cell {
  grid-area: hasaccessHoriz;
}
.noAccessHoriz-grid-cell {
  grid-area: noaccessHoriz;
}

.empty-grid-cell {
  font-size: 1.5rem;
}
.cell1-grid-cell {
  grid-area: cell1;
  background-color: greenyellow;
}
.cell2-grid-cell {
  grid-area: cell2;
  background-color: yellow;
}
.cell3-grid-cell {
  grid-area: cell3;
  color: white;
  background-color: red;
}
.cell4-grid-cell {
  grid-area: cell4;
  color: white;
  background-color: red;
}
.cell5-grid-cell {
  grid-area: cell5;
  background-color: orange;
}
.cell6-grid-cell {
  grid-area: cell6;
  background-color: greenyellow;
}
.cell7-grid-cell {
  grid-area: cell7;
  background-color: yellow;
}
.cell8-grid-cell {
  grid-area: cell8;
  background-color: yellow;
}
.cell9-grid-cell {
  grid-area: cell9;
  background-color: orange;
}
.cell10-grid-cell {
  grid-area: cell10;
  background-color: yellow;
}
.cell11-grid-cell {
  grid-area: cell11;
  background-color: greenyellow;
}

.table-body {
  display: grid;
  grid-template-areas:
    "empty empty empty empty truecondition truecondition truecondition"
    "empty empty empty empty insystem insystem notinsystem"
    "empty empty empty empty hasaccess noaccess notinsystem"
    "predcond inSystemHoriz hasaccessHoriz hasaccessself cell1 cell3 cell4"
    "predcond inSystemHoriz hasaccessHoriz hasaccessnotself cell2 cell3 cell4"
    "predcond inSystemHoriz noaccessHoriz noaccessself cell5 cell6 cell8"
    "predcond inSystemHoriz noaccessHoriz noaccessnotself cell5 cell7 cell8"
    "predcond notinsystemHoriz notinsystemHoriz notinsystemHoriz cell9 cell10 cell11";

  margin: 0.5rem;
  font-weight: bold;
  box-sizing: border-box;
  grid-gap: 1px;
}
/*table body new styles*/
.table-body-new {
  display: grid;
  grid-template-areas:
    "empty binary multi"
    "precision cell1 cell2"
    "recall cell3 cell4"
    "accuracy cell5 cell6"
    "mrate cell7 cell8"
    "forate cell9 cell10";
  margin: 0.5rem;
  font-weight: bold;
  box-sizing: border-box;
  grid-gap: 1px;
}

.cell1-grid-cell-new {
  grid-area: cell1;
}

.cell2-grid-cell-new {
  grid-area: cell2;
}

.cell3-grid-cell-new {
  grid-area: cell3;
}

.cell4-grid-cell-new {
  grid-area: cell4;
}

.cell5-grid-cell-new {
  grid-area: cell5;
}

.cell6-grid-cell-new {
  grid-area: cell6;
}

.cell7-grid-cell-new {
  grid-area: cell7;
}

.cell8-grid-cell-new {
  grid-area: cell8;
}

.cell9-grid-cell-new {
  grid-area: cell9;
}

.cell10-grid-cell-new {
  grid-area: cell10;
}

.empty-grid-cell-new {
  grid-area: empty;
}

.binary-grid-cell-new {
  grid-area: binary;
}

.multi-grid-cell-new {
  grid-area: multi;
}

.precision-grid-cell-new {
  grid-area: precision;
}

.recall-grid-cell-new {
  grid-area: recall;
}

.accuracy-grid-cell-new {
  grid-area: accuracy;
}

.mrate-grid-cell-new {
  grid-area: mrate;
}

.forate-grid-cell-new {
  grid-area: forate;
}
/* ----------  */

/* Shared tables styles*/
.grid-cell {
  box-shadow: 0 0 0 1px black;
  padding: 0.5rem;
}
/*
--- svg grapth styles
*/

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.axis--x path {
  display: none;
}

.grathContainer {
  width: 100%;
  height: 100%;
}

.imageContainer {
  height: 100%;
  width: 100%;
}

.imageWrap {
  height: 500px;
  width: 450px;
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  margin: 1rem;
  border-radius: 0.5rem;
}

.subImages {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.contentImg {
  display: flex;
  flex-direction: column;
}

.contentImg img {
  width: 100%;
}

.mainImage {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1;
}

.subImagesWrp {
  display: flex;
}
.imageTitle {
  background-color: #679ed2;
  color: white;
  font-size: 18px;
  width: 100%;
  text-align: center;
  height: 2rem;
  line-height: 2rem;
}
